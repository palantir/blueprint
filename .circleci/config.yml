version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.4.1

aliases:
  - &docker-node-image
    - image: cimg/node:18.18

  - &docker-node-browsers-image
    - image: cimg/node:18.18-browsers
      environment:
        CHROME_BIN: "/usr/bin/google-chrome"

  - &restore-node-modules-cache
    name: Restore node_modules cache
    key: v1-node-modules-{{ checksum "yarn.lock" }}

  - &restore-yarn-cache
    name: Restore Yarn global cache
    key: v1-yarn-global

  - &save-node-modules-cache
    name: Save node_modules cache
    paths:
      - node_modules
    key: v1-node-modules-{{ checksum "yarn.lock" }}

  - &save-yarn-cache
    name: Save Yarn global cache
    paths:
      # see https://yarnpkg.com/configuration/yarnrc#globalFolder
      - /.yarn/berry/global
    key: v1-yarn-global

jobs:
  checkout-code:
    docker: *docker-node-image
    steps:
      - checkout
      - restore_cache: *restore-yarn-cache
      - restore_cache: *restore-node-modules-cache
      - run: sudo corepack enable
      - run: yarn install --immutable
      - save_cache: *save-node-modules-cache
      - save_cache: *save-yarn-cache
      - persist_to_workspace:
          root: "."
          paths: [packages/*/node_modules]

  clean-lockfile:
    docker: *docker-node-image
    steps:
      - checkout
      - restore_cache: *restore-node-modules-cache
      - run: sudo corepack enable
      - run: yarn dedupe --check

  compile:
    docker: *docker-node-image
    resource_class: xlarge
    steps:
      - checkout
      - restore_cache: *restore-node-modules-cache
      - attach_workspace: { at: "." }
      - run: sudo corepack enable
      - run: yarn compile --parallel=7
      - persist_to_workspace:
          root: "."
          paths:
            - packages/*/lib
            - packages/*/src/generated

  format-check:
    docker: *docker-node-image
    environment:
      JUNIT_REPORT_PATH: reports
      NODE_ENV: test
    steps:
      - checkout
      - restore_cache: *restore-node-modules-cache
      - attach_workspace: { at: "." }
      - run: sudo corepack enable
      - run: yarn format-check

  lint:
    docker: *docker-node-image
    resource_class: large
    environment:
      JUNIT_REPORT_PATH: reports
      NODE_ENV: test
    steps:
      - checkout
      - restore_cache: *restore-node-modules-cache
      - attach_workspace: { at: "." }
      - run: sudo corepack enable
      - run: mkdir -p ./reports/eslint ./reports/stylelint
      # types and lint rules should already be compiled since this job depends on the 'compile' job
      - run: yarn lint
      - store_test_results: { path: ./reports }
      - store_artifacts: { path: ./reports }

  dist:
    docker: *docker-node-image
    resource_class: xlarge
    environment:
      NODE_ENV: test
    steps:
      - checkout
      - restore_cache: *restore-node-modules-cache
      - attach_workspace: { at: "." }
      - run: sudo corepack enable
      - run: yarn dist --parallel=7
      - persist_to_workspace:
          root: "."
          paths: [packages/*/lib, packages/*/dist]

  test-node-libs:
    docker: *docker-node-image
    environment:
      JUNIT_REPORT_PATH: reports
    parallelism: 2
    steps:
      - checkout
      - restore_cache: *restore-node-modules-cache
      - attach_workspace: { at: "." }
      - run: sudo corepack enable
      - run: mkdir -p ./reports
      - run:
          command: |
            case $CIRCLE_NODE_INDEX in \
            0) yarn nx test @blueprintjs/eslint-plugin ;; \
            1) yarn nx test @blueprintjs/stylelint-plugin ;; \
            esac
          when: always
      - store_test_results: { path: ./reports }
      - store_artifacts: { path: ./reports }

  test-react-16: &test-react
    docker: *docker-node-browsers-image
    resource_class: xlarge
    environment:
      JUNIT_REPORT_PATH: reports
    parallelism: 6
    steps:
      - checkout
      - restore_cache: *restore-node-modules-cache
      - attach_workspace: { at: "." }
      - run: sudo corepack enable
      # HACKHACK: pin Chrome version to work around bug in v115
      # see https://github.com/CircleCI-Public/browser-tools-orb/issues/75
      - run: sudo apt-get update
      - browser-tools/install-chrome:
          chrome-version: "114.0.5735.90"
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          name: Verify Chrome browser installed
          command: |
            google-chrome --version
            chromedriver --version
      - run: mkdir -p ./reports
      - run:
          # split karma tests into containers because they can take up a lot of memory
          # running them in one container caused Karma to time out frequently
          # see https://github.com/palantir/blueprint/issues/3616
          command: |
            case $CIRCLE_NODE_INDEX in \
            0) yarn nx run-many -t test:typeCheck ;; \
            1) yarn nx test:karma @blueprintjs/core ;; \
            2) yarn nx test:karma @blueprintjs/datetime ;; \
            3) yarn nx test:karma @blueprintjs/datetime2 ;; \
            4) yarn nx test:karma @blueprintjs/select ;; \
            5) yarn nx test:karma @blueprintjs/table
            esac
          when: always
      - store_test_results: { path: ./reports }
      - store_artifacts: { path: ./reports }

  test-iso-react-16: &test-iso
    docker: *docker-node-image
    environment:
      JUNIT_REPORT_PATH: reports
    steps:
      - checkout
      - restore_cache: *restore-node-modules-cache
      - attach_workspace: { at: "." }
      - run: sudo corepack enable
      - run: mkdir ./reports
      - run: yarn nx run-many -t test:iso
      - store_test_results: { path: ./reports }
      - store_artifacts: { path: ./reports }

  deploy-preview:
    docker: *docker-node-image
    steps:
      - checkout
      - restore_cache: *restore-node-modules-cache
      - attach_workspace: { at: "." }
      - store_artifacts: { path: packages/docs-app/dist }
      - store_artifacts: { path: packages/landing-app/dist }
      - store_artifacts: { path: packages/table-dev-app/dist }
      - store_artifacts: { path: packages/demo-app/dist }
      - run: ./scripts/submit-preview-comment.sh

  deploy-npm:
    docker: *docker-node-image
    steps:
      - checkout
      - restore_cache: *restore-node-modules-cache
      - attach_workspace: { at: "." }
      - run: sudo corepack enable
      - run: ./scripts/publish-npm-semver-tagged

workflows:
  compile_lint_test_dist_deploy:
    jobs:
      - checkout-code
      - clean-lockfile:
          requires: [checkout-code]
      - compile:
          requires: [checkout-code]
      - format-check:
          requires: [checkout-code]
      - lint:
          requires: [compile]
      - dist:
          requires: [compile]
      - test-node-libs:
          requires: [compile]
      - test-react-16:
          requires: [compile]
      - test-iso-react-16:
          requires: [compile]
      - deploy-preview:
          requires: [dist]
      - deploy-npm:
          requires: [dist, lint, test-node-libs, test-react-16, test-iso-react-16]
          filters:
            branches:
              only:
                - develop
                - next
                - /^release\/.*/
