version: 2

aliases:
  - &docker-node-lts
    - image: circleci/node:lts

  - &docker-node-browsers
    - image: circleci/node:8.10.0-browsers
      environment:
          CHROME_BIN: "/usr/bin/google-chrome"

  - &restore-node-modules-cache
    name: Restore node_modules cache
    key: v1-yarn-deps-{{ checksum "yarn.lock" }}

  - &restore-yarn-cache
    name: Restore yarnpkg cache
    key: v1-yarn-cache

  - &save-node-modules-cache
    name: Save node_modules cache
    paths:
      - node_modules
    key: v1-yarn-deps-{{ checksum "yarn.lock" }}

  - &save-yarn-cache
    name: Save yarnpkg cache
    paths:
      - ~/.cache/yarn
    key: v1-yarn-cache

references:
  reports_path: &reports_path
    path: ./reports

jobs:
  checkout-code:
    docker: *docker-node-lts
    steps:
      - checkout
      - restore_cache: *restore-yarn-cache
      - restore_cache: *restore-node-modules-cache
      - run: yarn install --non-interactive --cache-folder ~/.cache/yarn
      - run:
          name: Check if yarn.lock changed during install
          command: git diff --exit-code
      - save_cache: *save-node-modules-cache
      - save_cache: *save-yarn-cache
      - persist_to_workspace:
          root: '.'
          paths: [packages/*/node_modules]

  clean-lockfile:
    docker: *docker-node-lts
    steps:
      - checkout
      - restore_cache: *restore-node-modules-cache
      - run: ./scripts/verifyCleanLockfile.sh

  compile:
    docker: *docker-node-lts
    steps:
      - checkout
      - restore_cache: *restore-node-modules-cache
      - attach_workspace: { at: '.' }
      - run: yarn compile
      - persist_to_workspace:
          root: '.'
          paths: [packages/*/lib, packages/*/src/generated]

  lint:
    docker: *docker-node-lts
    environment:
      JUNIT_REPORT_PATH: reports
    steps:
      - checkout
      - restore_cache: *restore-node-modules-cache
      - attach_workspace: { at: '.' }
      - run: mkdir -p ./reports/tslint ./reports/stylelint
      - run: yarn compile --scope "@blueprintjs/tslint-config"
      - run: yarn lint
      - store_test_results: { path: ./reports }
      - store_artifacts: { path: ./reports }

  dist:
    docker: *docker-node-lts
    steps:
      - checkout
      - restore_cache: *restore-node-modules-cache
      - attach_workspace: { at: '.' }
      - run: yarn dist:libs
      - run: yarn dist:apps
      - persist_to_workspace:
          root: '.'
          paths: [packages/*/dist]

  test-react-16: &test-react
    docker: *docker-node-browsers
    environment:
      JUNIT_REPORT_PATH: reports
    parallelism: 3
    steps:
      - checkout
      - restore_cache: *restore-node-modules-cache
      - attach_workspace: { at: '.' }
      - run: mkdir ./reports
      - run:
          command: |
              case $CIRCLE_NODE_INDEX in \
              0) yarn lerna run --parallel test:pre ;; \
              1) yarn lerna run --parallel test:iso ;; \
              2) yarn lerna run --parallel test:karma ;; \
              esac
          when: always
      - store_test_results: { path: ./reports }
      - store_artifacts: { path: ./reports }

  test-react-15:
    # copy test-react-16 and override environment
    <<: *test-react
    environment:
      JUNIT_REPORT_PATH: reports
      REACT: 15 # use React 15 for this job

  deploy-preview:
    docker: *docker-node-lts
    steps:
      - checkout
      - restore_cache: *restore-node-modules-cache
      - attach_workspace: { at: '.' }
      - store_artifacts: { path: packages/docs-app/dist }
      - store_artifacts: { path: packages/landing-app/dist }
      - store_artifacts: { path: packages/table-dev-app/dist }
      - run:
          name: Submit Github comment with links to built artifacts
          command: node ./scripts/preview.js

  deploy-npm:
    docker: *docker-node-lts
    steps:
      - checkout
      - restore_cache: *restore-node-modules-cache
      - attach_workspace: { at: '.' }
      - run: ./scripts/publish-npm-semver-tagged

workflows:
  version: 2
  compile_lint_test_dist_deploy:
    jobs:
      - checkout-code
      - clean-lockfile:
          requires: [checkout-code]
      - compile:
          requires: [checkout-code]
      - lint:
          requires: [checkout-code]
      - dist:
          requires: [compile]
      - test-react-15:
          requires: [compile]
      - test-react-16:
          requires: [compile]
      - deploy-preview:
          requires: [dist]
      - deploy-npm:
          requires: [dist, lint, test-react-15, test-react-16]
          filters:
            branches:
              only:
                - develop
                - next
                - /^release\/.*/
