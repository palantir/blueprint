// Copyright 2016 Palantir Technologies, Inc. All rights reserved.

@import "../common/loading";
@import "../common/variables";
@import "../cell/common";
@import "./common";

@function menu-background($color) {
  @return linear-gradient(90deg, rgba($color, 0) 0%, $color 50%);
}

// when selection is disabled, header background color doesn't change on hover.
$header-menu-hover-background:
  menu-background($header-background-color);
$dark-header-menu-hover-background:
  menu-background($dark-header-background-color);

// when selection is enabled, background colorÂ changes on hover; need to match that.
$selectable-header-menu-hover-background:
  menu-background($header-hover-background-color);
$selectable-header-menu-selected-background:
  menu-background(mix($pt-intent-primary, $header-background-color, 10%));
$selectable-header-menu-selected-hover-background:
  menu-background(mix($pt-intent-primary, $header-hover-background-color, 10%));
$dark-selectable-header-menu-hover-background:
  menu-background($dark-header-hover-background-color);
$dark-selectable-header-menu-selected-background:
  menu-background(mix($pt-intent-primary, $dark-header-background-color, 10%));
$dark-selectable-header-menu-selected-hover-background:
  menu-background(mix($pt-intent-primary, $dark-header-hover-background-color, 10%));

.pt-table-header {
  flex: 1 1 auto;
  align-items: flex-start;
  justify-content: space-between;
  // make this a non-static ancestor to position descendants
  position: relative;
  text-overflow: ellipsis;
  user-select: none;

  &::before {
    // allow row/column headers to define bottom and right borders, see borders.scss
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    content: "";
  }

  .pt-table-row-name,
  .pt-table-column-name,
  .pt-table-header-content {
    // push these above the ::before content
    position: relative;
    width: 100%;
  }

  .pt-table-selection-enabled &:hover,
  &.pt-table-header-active {
    &::before {
      background-color: $header-hover-background-color;

      .pt-dark & {
        background-color: $dark-header-hover-background-color;
      }
    }
  }

  &.pt-table-header-selected::before {
    background-image: linear-gradient(
      90deg,
      rgba($header-selected-background-color, 0.1),
      rgba($header-selected-background-color, 0.1)
    );
  }
}

.pt-table-th-menu-container {
  flex-shrink: 0;
  position: absolute;
  right: $cell-border-width; // don't overlap box-shadow border
  opacity: 0; // hide until header is hovered
  text-align: right;

  .pt-table-header:hover &,
  .pt-table-header-active &,
  &.pt-table-th-menu-open {
    opacity: 1;
  }

  .pt-table-interaction-bar & {
    line-height: $interaction-bar-height;
  }
}

.pt-table-th-menu-container-background {
  position: absolute;
  top: 0;
  right: 0;
  width: $column-header-min-height + $pt-grid-size * 2;
  height: $column-header-min-height;
  pointer-events: none; // don't swallow clicks meant for the underlying header cell

  .pt-table-interaction-bar & {
    height: $interaction-bar-height;
  }

  .pt-table-th-menu-open & {
    background-image: $header-menu-hover-background;

    .pt-dark & {
      background-image: $dark-header-menu-hover-background;
    }
  }

  // background doesn't change on hover when selection is disabled; match the default background
  .pt-table-header:hover &,
  .pt-table-header-active &,
  .pt-table-th-menu-open & {
    background-image: $header-menu-hover-background;

    .pt-dark & {
      background-image: $dark-header-menu-hover-background;
    }
  }

  // background changes on hover/select when selection is enabled; need to match the new background
  .pt-table-selection-enabled .pt-table-header:hover &,
  .pt-table-selection-enabled .pt-table-header-active & {
    background-image: $selectable-header-menu-hover-background;

    .pt-dark & {
      background-image: $dark-selectable-header-menu-hover-background;
    }
  }

  .pt-table-selection-enabled .pt-table-header.pt-table-header-selected & {
    background-image: $selectable-header-menu-selected-background;

    .pt-dark & {
      background-image: $dark-selectable-header-menu-selected-background;
    }
  }

  .pt-table-selection-enabled .pt-table-header.pt-table-header-selected:hover & {
    background-image: $selectable-header-menu-selected-hover-background;

    .pt-dark & {
      background-image: $dark-selectable-header-menu-selected-hover-background;
    }
  }
}

.pt-table-th-menu {
  cursor: $action-cursor;
  width: $column-header-min-height; // create a larger, more accessible click target
  height: $column-header-min-height;

  .pt-table-interaction-bar & {
    right: $cell-border-width;
    width: $interaction-bar-height;
    height: $interaction-bar-height;
    text-align: center;

    .pt-icon-standard {
      $icon-margin: ($interaction-bar-height - $pt-icon-size-standard) / 2;

      margin: $icon-margin;
      margin-left: $icon-margin + $cell-border-width;
      vertical-align: top;
    }
  }

  .pt-icon-standard {
    $icon-offset: ($column-header-min-height - $pt-icon-size-standard) / 2;

    margin-top: $icon-offset;
    margin-right: $icon-offset;
    border-radius: $pt-border-radius;
    box-shadow: inset 0 0 0 1px rgba($black, $pt-drop-shadow-opacity);
    background-color: $header-background-color;
    color: $pt-icon-color;

    // light theme

    .pt-table-selection-enabled & {
      background-color: $header-hover-background-color;
    }

    .pt-table-selection-enabled .pt-table-header.pt-table-header-selected & {
      background-color: $selectable-header-menu-selected-background;
    }

    // dark theme

    .pt-dark & {
      box-shadow: inset 0 0 0 1px rgba($white, $pt-drop-shadow-opacity);
      background-color: $dark-header-background-color;
      color: $pt-dark-icon-color;
    }

    .pt-dark .pt-table-selection-enabled & {
      background-color: $dark-header-hover-background-color;
    }

    // need to use a long selector here to properly scope the style
    // stylelint-disable-next-line selector-max-compound-selectors
    .pt-dark .pt-table-selection-enabled .pt-table-header.pt-table-header-selected & {
      background-color: $dark-selectable-header-menu-selected-background;
    }
  }

  &:hover .pt-icon-standard {
    box-shadow: inset 0 0 0 1px rgba($black, $pt-drop-shadow-opacity * 2);
    color: $pt-icon-color-hover;

    .pt-dark & {
      box-shadow: inset 0 0 0 1px rgba($white, $pt-drop-shadow-opacity * 2);
      color: $pt-dark-icon-color-hover;
    }
  }

  &.pt-popover-open .pt-icon-standard {
    box-shadow: none;
    background-color: $pt-icon-color-selected;
    color: $white;

    .pt-dark & {
      box-shadow: none;
      background-color: $pt-dark-icon-color-selected;
      color: $white;
    }
  }
}

.pt-table-thead {
  display: block;
  white-space: nowrap;
}

.pt-table-column-header-tr {
  display: flex;

  .pt-table-header {
    // Using a fixed flex layout give us columns that match their height. Fixes #45
    flex: 0 0;
  }
}

.pt-table-column-headers .pt-table-interaction-bar {
  position: relative;
  height: $interaction-bar-height;
}

.pt-table-column-headers .pt-table-header {
  min-height: $column-header-min-height;
  vertical-align: top;
  line-height: $column-header-min-height;
}

.pt-table-row-headers .pt-table-header {
  min-width: $row-header-min-width;
  // prevent text from leaking out of the cell during scroll, before the header
  // width is updated on scroll end.
  overflow: hidden;
  line-height: $cell-height;
}

.pt-table-column-name-text,
.pt-table-row-name-text {
  flex-grow: 1;
  pointer-events: none;
}

.pt-table-truncated-text {
  max-height: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
}

.pt-table-no-wrap-text {
  white-space: nowrap;
}

.pt-table-column-name-text {
  padding: $cell-padding;
}

.pt-table-editable-name {
  display: block;
  pointer-events: all;

  &.pt-editable-text {
    &::before {
      top: -$cell-padding-vertical + $cell-border-width - 2px;
      right: -$cell-padding-horizontal + $cell-border-width - 1px;
      bottom: -$cell-padding-vertical;
      left: -$cell-padding-horizontal + $cell-border-width - 2px;
      border-radius: 0;
    }

    &:not(.pt-editable-editing)::before {
      box-shadow: none;
    }

    &.pt-editable-editing {
      &::before {
        top: -$cell-padding-vertical + $cell-border-width - 1px;
        right: -$cell-padding-horizontal + $cell-border-width;
        bottom: -$cell-padding-vertical + 1px;
        left: -$cell-padding-horizontal + $cell-border-width - 1px;
        cursor: $select-text-cursor;
      }

      &.pt-table-editable-text {
        &::before {
          right: $cell-border-width;
          left: $cell-border-width - 1px;
        }
      }
    }
  }

  .pt-table-column-name &.pt-editable-text {
    &::before {
      bottom: -$cell-padding-vertical - 1px;
    }

    &.pt-editable-editing::before {
      bottom: -$cell-padding-vertical;
    }
  }
}

.pt-table-column-name-text .pt-table-editable-name input {
  height: $large-cell-height; // fixed height for IE11
}

.pt-table-column-name {
  display: flex;
  flex-direction: column;
  text-align: left;
  font-size: $pt-font-size;
}

.pt-table-row-name {
  display: block;
  padding: 0 $pt-grid-size / 2;
  text-align: right;
  font-size: $pt-font-size-small;
}

.pt-table-header-content {
  white-space: normal;
  font-size: $pt-font-size;

  // react-select does not conform to our naming scheme
  // stylelint-disable selector-class-pattern
  .is-searchable {
    &:not(.is-focused) > .Select-control {
      box-shadow: none;
      background: none;
    }

    > .Select-control {
      border-radius: 0;

      .Select-value {
        cursor: $action-cursor;
      }
    }
  }

  .Select-value {
    right: -$cell-border-width;
  }
  // stylelint-enable selector-class-pattern
}

.pt-table-column-name,
.pt-table-row-name {
  transition: color $cell-transition-duration;
}

.pt-table-header.pt-loading {
  @include cell-content-align-vertical();

  .pt-table-column-name,
  .pt-table-row-name {
    flex: 1;
  }

  .pt-table-column-name-text {
    @include cell-content-align-vertical();
    padding: $pt-grid-size;

    .pt-skeleton {
      height: $column-name-text-skeleton-height;
    }
  }

  .pt-table-row-name {
    @include cell-content-align-vertical();
  }
}
