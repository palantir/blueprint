// Copyright 2015 Palantir Technologies, Inc. All rights reserved.
// Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy
// of the license at https://github.com/palantir/blueprint/blob/master/LICENSE
// and https://github.com/palantir/blueprint/blob/master/PATENTS

/*
Components

Blueprint's JavaScript components are stable and their APIs adhere to [semantic versioning](http://semver.org/).
They are distributed in the __@blueprintjs/core__ package and can be consumed as CommonJS modules
[via NPM](https://www.npmjs.com/package/@blueprintjs/core).

Weight: 6

Styleguide components
*/

/*
Usage

Weight: -1

Styleguide components.usage
*/

/*
NPM installation

Install the core package with an NPM client like `npm` or `yarn`, pulling in all relevant dependencies:

```sh
npm install --save @blueprintjs/core
```

After installation, you'll be able to import the React components in your application:

```
import { Spinner, DatePickerFactory } from "@blueprintjs/core";
// or
import * as Blueprint from "@blueprintjs/core";

// JSX works
const mySpinner = <Spinner/>;

// using the namespace import
const anotherSpinner = <Blueprint.Spinner/>;

// use factories for React.createElement shorthand if you're not using JSX
const myDatePicker = DatePickerFactory();
```

<div class="pt-callout pt-intent-warning pt-icon-warning-sign">
  Don't forget to import the CSS file from each package!
</div>

Styleguide components.usage.npm
*/

/*
TypeScript

Blueprint is written in TypeScript and therefore its own `.d.ts` type definitions are distributed in the NPM package
and should be resolved automatically by the compiler. However, you'll need to install typings for Blueprint's
dependencies before you can consume it:

```sh
# required for all @blueprintjs packages:
npm install --save @types/dom4 @types/react @types/react-dom @types/react-addons-css-transition-group

# @blueprintjs/datetime requires:
npm install --save @types/moment

# @blueprintjs/table requires:
npm install --save @types/es6-shim
```

<div class="pt-callout pt-intent-primary pt-icon-info-sign">
  For more information, see the TypeScript Handbook for [guidance on consuming declaration files][handbook].
</div>

[handbook]: https://www.typescriptlang.org/docs/handbook/declaration-files/consumption.html

Styleguide components.usage.typescript
*/

/*
Vanilla JS APIs

JS Components are built using React, but that does not limit their usage to just React applications.
You can render any component in any JavaScript application with `ReactDOM.render`. Think of it like
using a JQuery plugin.

```
const myContainerElement = document.querySelector(".my-container");

// with JSX
ReactDOM.render(
    <Spinner className="pt-intent-primary pt-small" />,
    myContainerElement
);

// with vanilla JS, use the factory
ReactDOM.render(
    SpinnerFactory({
        className: "pt-intent-primary pt-small"
    }),
    myContainerElement
);
```

To remove the component from the DOM and clean up, unmount it:

```
ReactDOM.unmountComponentAtNode(myContainerElement);
```

Check out the [React API docs](https://facebook.github.io/react/docs/react-api.html) for more details.

Styleguide components.usage.vanilla
*/

@import "alert/alert";
@import "breadcrumbs/breadcrumbs";
@import "button/button-group";
@import "button/button";
@import "callout/callout";
@import "card/card";
@import "collapse/collapse";
@import "collapsible-list/collapsible-list";
@import "context-menu/context-menu";
@import "dialog/dialog";
@import "editable-text/editable-text";
@import "forms/index";
@import "hotkeys/hotkeys";
@import "menu/menu";
@import "navbar/navbar";
@import "non-ideal-state/non-ideal-state";
@import "overlay/overlay";
@import "popover/popover";
@import "portal/portal";
@import "progress/progress-bar";
@import "slider/slider";
@import "spinner/spinner";
@import "table/table";
@import "tabs/tabs";
@import "tag/tag";
@import "toast/toast";
@import "tooltip/tooltip";
@import "tree/tree";
