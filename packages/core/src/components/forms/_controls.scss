// Copyright 2015 Palantir Technologies, Inc. All rights reserved.
// Licensed under the terms of the LICENSE file distributed with this project.

@import "../../common/mixins";
@import "../../common/variables";
@import "../button/common";

$control-background-color: $button-background-color !default;
$control-background-color-hover: $button-background-color-hover !default;
$control-background-color-active: $button-background-color-active !default;
$dark-control-background-color: $dark-button-background-color !default;
$dark-control-background-color-hover: $dark-button-background-color-hover !default;
$dark-control-background-color-active: $dark-button-background-color-active !default;

$control-checked-background-color: nth(map-get($button-intents, "primary"), 1) !default;
$control-checked-background-color-hover: nth(map-get($button-intents, "primary"), 2) !default;
$control-checked-background-color-active: nth(map-get($button-intents, "primary"), 3) !default;

.#{$ns}-control {
  display: block;
  position: relative;
  margin-bottom: $pt-grid-size;
  cursor: pointer;
  // controls sometimes don't have text in their <label>, so we set a minimum height
  min-height: $control-indicator-size;
  padding-left: $control-indicator-size + $pt-grid-size;
  text-transform: none;
  line-height: $control-indicator-size;

  &.#{$ns}-disabled {
    cursor: not-allowed;
    color: $pt-text-color-disabled;
  }

  &.#{$ns}-inline {
    display: inline-block;
    margin-right: $pt-grid-size * 2;
  }

  input {
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    z-index: -1; // don't let it intercept clicks
  }

  .#{$ns}-control-indicator {
    @include pt-icon($pt-icon-size-standard);
    position: absolute;
    top: 0;
    left: 0;
    margin: 0;
    border: none;
    box-shadow: $button-box-shadow;
    background-clip: padding-box;
    background-color: $control-background-color;
    background-image: $button-gradient;
    cursor: pointer;
    width: $control-indicator-size;
    height: $control-indicator-size;
    line-height: $control-indicator-size;
    user-select: none;
  }

  input:checked ~ .#{$ns}-control-indicator {
    box-shadow: $button-intent-box-shadow;
    background-color: $control-checked-background-color;
    background-image: $button-intent-gradient;
    color: $white;
  }

  &:hover {
    .#{$ns}-control-indicator {
      background-color: $control-background-color-hover;
    }

    input:checked ~ .#{$ns}-control-indicator {
      box-shadow: $button-intent-box-shadow;
      background-color: $control-checked-background-color-hover;
    }
  }

  input:not(:disabled):active {
    ~ .#{$ns}-control-indicator {
      box-shadow: $button-box-shadow-active;
      background: $control-background-color-active;
    }

    &:checked ~ .#{$ns}-control-indicator {
      box-shadow: $button-intent-box-shadow-active;
      background: $control-checked-background-color-active;
    }
  }

  input:focus ~ .#{$ns}-control-indicator {
    @include focus-outline();
  }

  input:disabled {
    ~ .#{$ns}-control-indicator {
      box-shadow: none;
      background: $button-background-color-disabled;
      cursor: not-allowed;
    }

    &:checked ~ .#{$ns}-control-indicator {
      box-shadow: none;
      background: rgba($control-checked-background-color, 0.5);
    }
  }

  /*
  Checkbox

  Markup:
  <label class="#{$ns}-control #{$ns}-checkbox {{.modifier}}">
    <input type="checkbox" {{:modifier}} />
    <span class="#{$ns}-control-indicator"></span>
    Checkbox
  </label>

  :checked  - Checked
  :disabled - Disabled. Also add <code>.#{$ns}-disabled</code> to <code>.#{$ns}-control</code> to change text color (not shown below).
  :indeterminate - Indeterminate. Note that this style can only be achieved via JavaScript
                   <code>input.indeterminate = true</code>.
  .#{$ns}-align-right - Right-aligned indicator
  .#{$ns}-large - Large

  Styleguide checkbox
  */

  &.#{$ns}-checkbox {
    .#{$ns}-control-indicator {
      border-radius: $pt-border-radius;
      font-size: $control-indicator-size;
    }

    input:indeterminate,
    &:hover input:indeterminate {
      // :indeterminate should behave like :checked with different icon
      // stylelint-disable-next-line scss/at-extend-no-missing-placeholder
      @extend input:checked;
    }

    // CSS API support
    input:checked ~ .#{$ns}-control-indicator:empty::before {
      content: $pt-icon-small-tick;
    }

    input:indeterminate ~ .#{$ns}-control-indicator:empty::before {
      content: $pt-icon-small-minus;
    }
  }

  /*
  Radio

  Markup:
  <label class="#{$ns}-control #{$ns}-radio {{.modifier}}">
    <input type="radio" name="docs-radio-regular" {{:modifier}} />
    <span class="#{$ns}-control-indicator"></span>
    Radio
  </label>

  :checked  - Selected
  :disabled - Disabled. Also add <code>.#{$ns}-disabled</code> to <code>.#{$ns}-control</code> to change text color (not shown below).
  .#{$ns}-align-right - Right-aligned indicator
  .#{$ns}-large - Large

  Styleguide radio
  */

  // stylelint-disable-next-line order/order
  $radio-indicator-font-size: $pt-grid-size * 0.6 !default;
  $radio-indicator-font-size-large: $pt-grid-size * 0.8 !default;

  &.#{$ns}-radio {
    .#{$ns}-control-indicator {
      border-radius: 50%;
      font-size: $radio-indicator-font-size;
    }

    input:checked ~ .#{$ns}-control-indicator::before {
      display: inline-block;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      border-radius: 50%;
      background: $white;
      width: 1em;
      height: 1em;
      content: "";
    }

    input:checked:disabled ~ .#{$ns}-control-indicator::before {
      box-shadow: none;
    }

    input:focus ~ .#{$ns}-control-indicator {
      -moz-outline-radius: $control-indicator-size;
    }
  }

  /*
  Switch

  Markup:
  <label class="#{$ns}-control #{$ns}-switch {{.modifier}}">
    <input type="checkbox" {{:modifier}} />
    <span class="#{$ns}-control-indicator"></span>
    Switch
  </label>

  :checked  - Selected
  :disabled - Disabled. Also add <code>.#{$ns}-disabled</code> to <code>.#{$ns}-control</code> to change text color (not shown below).
  .#{$ns}-align-right - Right-aligned indicator
  .#{$ns}-large - Large

  Styleguide switch
  */

  // stylelint-disable-next-line order/order
  $switch-height: $control-indicator-size !default;
  $switch-height-large: $pt-grid-size * 2 !default;
  $switch-width: $pt-grid-size * 2.8 !default;
  $switch-width-large: $pt-grid-size * 3.2 !default;
  $switch-indicator-margin: $pt-grid-size * 0.2 !default;

  $switch-background-color: rgba($gray4, 0.5) !default;
  $switch-background-color-hover: rgba($gray2, 0.5) !default;
  $switch-background-color-active: rgba($gray1, 0.5) !default;
  $switch-background-color-disabled: $button-background-color-disabled !default;
  $switch-checked-background-color: $control-checked-background-color !default;
  $switch-checked-background-color-hover: $control-checked-background-color-hover !default;
  $switch-checked-background-color-active: $control-checked-background-color-active !default;
  $switch-checked-background-color-disabled: rgba($blue3, 0.5) !default;
  $dark-switch-background-color: rgba($black, 0.5) !default;
  $dark-switch-background-color-hover: rgba($black, 0.7) !default;
  $dark-switch-background-color-active: rgba($black, 0.9) !default;
  $dark-switch-background-color-disabled: $dark-button-background-color-disabled !default;
  $dark-switch-checked-background-color: $control-checked-background-color !default;
  $dark-switch-checked-background-color-hover: $blue4 !default;
  $dark-switch-checked-background-color-active: $blue5 !default;
  $dark-switch-checked-background-color-disabled: rgba($blue1, 0.5) !default;

  $switch-indicator-border: border-shadow($pt-border-shadow-opacity) !default;
  $switch-indicator-background-color: $white !default;
  $switch-indicator-background-color-disabled: rgba($white, 0.8) !default;
  $dark-switch-indicator-border: border-shadow($pt-dark-border-shadow-opacity) !default;
  $dark-switch-indicator-background-color: $dark-gray4 !default;
  $dark-switch-indicator-background-color-disabled: rgba($black, 0.4) !default;

  &.#{$ns}-switch {
    padding-left: $switch-width + $pt-grid-size;

    .#{$ns}-control-indicator {
      border: none;
      border-radius: $switch-width;
      box-shadow: none;
      background: $switch-background-color;
      width: $switch-width;
      height: $switch-height;
      transition: background-color $pt-transition-duration $pt-transition-ease;

      &::before {
        display: block;
        position: relative;
        top: $switch-indicator-margin;
        left: $switch-indicator-margin;
        border-radius: $switch-height;
        box-shadow: $button-box-shadow-overlay;
        background: $switch-indicator-background-color;
        background-clip: padding-box;
        width: $switch-height - ($switch-indicator-margin * 2);
        height: $switch-height - ($switch-indicator-margin * 2);
        content: "";
        transition: left $pt-transition-duration $pt-transition-ease;
      }
    }

    &.#{$ns}-align-right {
      padding-right: $switch-width + $pt-grid-size;
      padding-left: 0;
    }

    input:checked ~ .#{$ns}-control-indicator {
      box-shadow: none;
      background-color: $switch-checked-background-color;
      width: $switch-width;
      height: $switch-height;

      &::before {
        left: $switch-width - $switch-height + $switch-indicator-margin;
        box-shadow: $button-box-shadow-overlay;
      }
    }

    &:hover {
      .#{$ns}-control-indicator {
        background-color: $switch-background-color-hover;
      }

      input:checked ~ .#{$ns}-control-indicator {
        background-color: $switch-checked-background-color-hover;
      }
    }

    input:not(:disabled):active {
      ~ .#{$ns}-control-indicator {
        box-shadow: none;
        background-color: $switch-background-color-active;
      }

      &:checked ~ .#{$ns}-control-indicator {
        background-color: $control-checked-background-color-active;

        &::before {
          box-shadow: $button-box-shadow-overlay;
        }
      }
    }

    input:disabled {
      ~ .#{$ns}-control-indicator {
        background-color: $switch-background-color-disabled;

        &::before {
          box-shadow: none;
          background-color: $switch-indicator-background-color-disabled;
        }
      }

      &:checked ~ .#{$ns}-control-indicator {
        background-color: $switch-checked-background-color-disabled;
      }
    }
  }

  // right-aligned indicator is glued to the right side of the container
  &.#{$ns}-align-right {
    padding-right: $control-indicator-size + $pt-grid-size;
    padding-left: 0;

    .#{$ns}-control-indicator {
      right: 0;
      left: auto;
    }
  }

  &.#{$ns}-large {
    min-height: $control-indicator-size-large;
    padding-left: $control-indicator-size-large + $pt-grid-size;
    line-height: $control-indicator-size-large;
    font-size: $pt-font-size-large;

    .#{$ns}-control-indicator {
      width: $control-indicator-size-large;
      height: $control-indicator-size-large;
      line-height: $control-indicator-size-large;
      font-family: $icons20-family;
      font-size: $control-indicator-size-large;
    }

    &.#{$ns}-align-right {
      padding-right: $control-indicator-size-large + $pt-grid-size;
      padding-left: 0;
    }

    &.#{$ns}-checkbox input:checked ~ .#{$ns}-control-indicator::before {
      top: 1px;
    }

    &.#{$ns}-radio .#{$ns}-control-indicator {
      font-size: $radio-indicator-font-size-large;
    }

    &.#{$ns}-switch {
      padding-left: $switch-width-large + $pt-grid-size;

      .#{$ns}-control-indicator {
        width: $switch-width-large;
        height: $switch-height-large;

        &::before {
          width: $switch-height-large - ($switch-indicator-margin * 2);
          height: $switch-height-large - ($switch-indicator-margin * 2);
        }
      }

      input:checked ~ .#{$ns}-control-indicator {
        width: $switch-width-large;
        height: $switch-height-large;

        &::before {
          left: $switch-width-large - $switch-height-large + $switch-indicator-margin;
        }
      }

      &.#{$ns}-align-right {
        padding-right: $switch-width-large + $pt-grid-size;
        padding-left: 0;
      }
    }
  }

  .#{$ns}-dark & {
    color: $pt-dark-text-color;

    &.#{$ns}-disabled {
      color: $pt-dark-text-color-disabled;
    }

    .#{$ns}-control-indicator {
      box-shadow: $dark-button-box-shadow;
      background-color: $dark-control-background-color;
      background-image: $dark-button-gradient;
    }

    input:checked ~ .#{$ns}-control-indicator {
      box-shadow: $dark-button-intent-box-shadow;
    }

    &:hover {
      .#{$ns}-control-indicator {
        background-color: $dark-control-background-color-hover;
      }
    }

    input:not(:disabled):active {
      ~ .#{$ns}-control-indicator {
        box-shadow: $dark-button-box-shadow-active;
        background: $dark-control-background-color-active;
      }

      &:checked ~ .#{$ns}-control-indicator {
        box-shadow: $dark-button-intent-box-shadow-active;
        background-color: $control-checked-background-color-active;
      }
    }

    input:disabled {
      ~ .#{$ns}-control-indicator {
        box-shadow: none;
        background: $dark-button-background-color-disabled;
        cursor: not-allowed;
      }

      &:checked ~ .#{$ns}-control-indicator {
        box-shadow: none;
        background: rgba($control-checked-background-color-active, 0.5);
      }
    }

    &.#{$ns}-checkbox {
      input:checked {
        &:disabled ~ .#{$ns}-control-indicator::before {
          color: $dark-button-color-disabled;
        }
      }
    }

    &.#{$ns}-radio {
      input:checked:disabled ~ .#{$ns}-control-indicator::before {
        background: $dark-button-color-disabled;
      }
    }

    &.#{$ns}-switch {
      .#{$ns}-control-indicator {
        box-shadow: none;
        background: $dark-switch-background-color;

        &::before {
          box-shadow: $dark-button-box-shadow;
          background: $dark-switch-indicator-background-color;
        }
      }

      input:checked ~ .#{$ns}-control-indicator {
        box-shadow: none;
        background-color: $dark-switch-checked-background-color;

        &::before {
          box-shadow: inset $dark-button-box-shadow;
        }
      }

      &:hover {
        .#{$ns}-control-indicator {
          background: $dark-switch-background-color-hover;
        }

        input:checked ~ .#{$ns}-control-indicator {
          background: $dark-switch-checked-background-color-hover;
        }
      }

      input:not(:disabled):active {
        ~ .#{$ns}-control-indicator {
          box-shadow: none;
          background: $dark-switch-background-color-active;

          // we're in too deep to quit
          // stylelint-disable max-nesting-depth
          &::before {
            box-shadow: $dark-button-box-shadow;
          }
        }

        &:checked ~ .#{$ns}-control-indicator {
          background: $dark-switch-checked-background-color-active;

          &::before {
            box-shadow: inset $dark-button-box-shadow;
          }
        }
      }

      input:disabled {
        ~ .#{$ns}-control-indicator {
          background: $dark-switch-background-color-disabled;

          &::before {
            box-shadow: none;
            background: $dark-switch-indicator-background-color-disabled;
          }
          // stylelint-enable max-nesting-depth
        }

        &:checked ~ .#{$ns}-control-indicator {
          background: $dark-switch-checked-background-color-disabled;
        }
      }
    }
  }

  /*
  Inline labels

  Markup:
  <div>
    <label class="#{$ns}-label">A group of related options</label>
    <label class="#{$ns}-control #{$ns}-checkbox #{$ns}-inline">
      <input type="checkbox" />
      <span class="#{$ns}-control-indicator"></span>
      First
    </label>
    <label class="#{$ns}-control #{$ns}-checkbox #{$ns}-inline">
      <input type="checkbox" />
      <span class="#{$ns}-control-indicator"></span>
      Second
    </label>
    <label class="#{$ns}-control #{$ns}-checkbox #{$ns}-inline">
      <input type="checkbox" />
      <span class="#{$ns}-control-indicator"></span>
      Third
    </label>
  </div>

  Styleguide checkbox-inline
  */
}
