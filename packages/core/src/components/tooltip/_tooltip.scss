// Copyright 2015 Palantir Technologies, Inc. All rights reserved.
// Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy
// of the license at https://github.com/palantir/blueprint/blob/master/LICENSE
// and https://github.com/palantir/blueprint/blob/master/PATENTS

@import "~bourbon/app/assets/stylesheets/bourbon";
@import "../../common/variables";
@import "../popover/common";
@import "./common";

/*
Tooltips

Tooltips display a small string of text next to a target element.

@react-example TooltipExample

Styleguide components.tooltip
*/

/*
JavaScript API

The `Tooltip` component is available in the __@blueprintjs/core__ package.
Make sure to review the [general usage docs for JS components](#components.usage).

When creating a tooltip, you must specify both:
- its _content_, by setting the `content` prop, and
- its _target_, as a single child element or as plain text

When the user hovers over the target, the content is displayed in a tooltip above the target.

Content can be a `string` or a single `JSX.Element` (typically used to format said string),
but you should keep it simple. If you need more space, consider using a popover instead of a tooltip.

<div class="pt-callout pt-intent-warning pt-icon-warning-sign">
  <h5>Button targets</h5>
  Buttons make great tooltip targets, but the `disabled` attribute will prevent all events so the enclosing `Tooltip`
  will not know when to respond. Use [`AnchorButton`](#components.button.js.anchor-button) instead;
  see the [callout here](#components.button.js) for more details.
</div>

@interface ITooltipProps

Weight: -10

Styleguide components.tooltip.js
*/

/*
Controlled mode

The `Tooltip` component supports controlled mode in exactly the same way the `Popover` component does. Please refer to the
[controlled mode documentation](#components.popover.js.controlled) for `Popover` for details.

Styleguide components.tooltip.js.controlled
*/

/*
Inline tooltips

Inline tooltips (with `inline={true}`) do not have a set width, and therefore will not break long content into multiple lines.
This is enforced with `white-space: nowrap`.

If you want to create an inline tooltip with content spanning multiple lines, you must override the default styles and
set an appropriate size for `.pt-tooltip`.

Styleguide components.tooltip.js.inline
*/

/*
Combining with popover

You can give a single target both a popover and a tooltip. You must put the `Tooltip` inside the `Popover` (and the
target inside the `Tooltip`).

This order is required because when the popover is open, the tooltip is disabled, to prevent both elements from
appearing at the same time.

```
<Popover content={<h1>Popover!</h1>} position={Position.RIGHT}>
    <Tooltip content="I has a popover!" position={Position.RIGHT}>
        <button className="pt-button pt-intent-success">Hover and click me</button>
    </Tooltip>
</Popover>
```

Styleguide components.tooltip.js.popover
*/

/*
SVG tooltip

`SVGTooltip` is a convenience component provided for SVG contexts. It is a simple wrapper around `Tooltip`
that sets `rootElementTag="g"`.

Styleguide components.tooltip.js.svg
*/

.pt-tooltip {
  @include popover-sizing(
    $arrow-square-size: 22px,
    $arrow-offset: 3px,
    $arrow-target-offset: -4px
  );

  @include popover-appearance(
    $tooltip-background-color,
    $tooltip-text-color,
    $pt-tooltip-box-shadow,
    $pt-drop-shadow-opacity,
    $pt-border-shadow-opacity
  );

  // lightweight scale for tooltips
  @include react-transition(
    "pt-popover",
    (transform: scale(0.8) scale(1)),
    $duration: $pt-transition-duration * 2,
    $after: "> &"
  );

  .pt-popover-content {
    padding: $tooltip-padding-vertical $tooltip-padding-horizontal;
  }

  /*
  Dark theme

  If the trigger for a tooltip is nested inside a `.pt-dark` container, the tooltip will automatically have the
  dark theme applied as well.

  You can also explicitly apply the dark theme to a tooltip by adding the prop `tooltipClassName="pt-dark"`.

  Weight: 10

  Styleguide components.tooltip.js.dark
  */

  &.pt-dark,
  .pt-dark & {
    @include popover-appearance(
      $dark-tooltip-background-color,
      $dark-tooltip-text-color,
      $pt-dark-tooltip-box-shadow,
      $pt-dark-drop-shadow-opacity,
      $pt-dark-border-shadow-opacity
    );
  }

  @each $intent, $color in $pt-intent-colors {
    &.pt-intent-#{$intent} {
      .pt-popover-content {
        background: $color;
        color: $white;
      }

      .pt-popover-arrow-fill {
        fill: $color;
      }
    }
  }
}

.pt-popover-target .pt-tooltip {
  // inline tooltips don't get auto-sizing, so this sort of emulates it
  white-space: nowrap;
}

.pt-tooltip-indicator {
  border-bottom: dotted 1px;
  cursor: help;
}
