// Copyright 2016 Palantir Technologies, Inc. All rights reserved.
// Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy
// of the license at https://github.com/palantir/blueprint/blob/master/LICENSE
// and https://github.com/palantir/blueprint/blob/master/PATENTS

/*
Skeletons

Skeletons allow you to show a loading state that mimics the shape of your yet-to-load content.

Weight: 1

Styleguide components.progress.skeleton
*/

/*
CSS API

Apply the class `.pt-skeleton` to elements that you would like to cover up with a loading animation. The skeleton inherits the
dimensions of whatever element the class is applied to. This means that when using skeletons to show loading text, you should use
some sort of placeholder text that is approximately the length of your expected text.

<div class="pt-callout pt-intent-warning pt-icon-warning-sign">
  <h5>Usage with focusable elements</h5>
  When using the `.pt-skeleton` class with focusable elements such as inputs and buttons, be sure to set the `tabindex` attribute
  to `-1` or the `disabled` attribute to prevent focusing. Failing to do so will allow the browser draw an outline around the
  skeleton when it is tab-focused.
</div>

Markup:
<div class="pt-card">
  <h5><a class="{{.modifier}}" href="#" tabindex="-1">My Card Title</a></h5>
  <p class="{{.modifier}}">
    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque eget tortor felis. Fusce dapibus metus in dapibus mollis.
    Quisque eget ex diam. Vivamus mattis nisi ut nisl rhoncus convallis. Curabitur id tristique mi, quis elementum dolor. In
    suscipit ut sapien ac tempor. Aenean quis fringilla felis.
  </p>
  <button type="button" class="pt-button {{.modifier}}" disabled>Submit</button>
</div>

.pt-skeleton - Covers up your element with a skeleton animation.

Styleguide components.progress.skeleton.css
*/

@import "../../common/variables";

$skeleton-animation-duration: $pt-transition-duration * 20 !default;
$skeleton-color-start: rgba($gray4, 0.2) !default;
$skeleton-color-end: rgba($gray1, 0.2) !default;

@keyframes glow {
  0%,
  100% {
    border-color: $skeleton-color-start;
    background-color: $skeleton-color-start;
  }

  50% {
    border-color: $skeleton-color-end;
    background-color: $skeleton-color-end;
  }
}

// This class hides content with a glowing, rounded rectangle. CSS properties that should not be overriden by consumers use the
// "!important" rule.
/* stylelint-disable declaration-no-important */
.pt-skeleton {
  border-color: $skeleton-color-start !important;
  border-radius: 2px;
  box-shadow: none !important;
  background: $skeleton-color-start !important;

  // Prevent background color from extending to the border and overlappping
  background-clip: padding-box !important;

  cursor: default;
  line-height: 1;

  // Transparent text will occupy space but be invisible to the user
  color: transparent !important;
  animation: $skeleton-animation-duration linear infinite glow;
  pointer-events: none;
  user-select: none;
}
/* stylelint-enable declaration-no-important */

