// Copyright 2015 Palantir Technologies, Inc. All rights reserved.
// Licensed under the BSD-3 License as modified (the “License”); you may obtain a copy
// of the license at https://github.com/palantir/blueprint/blob/master/LICENSE
// and https://github.com/palantir/blueprint/blob/master/PATENTS

@import "variables";

// using single quotes to avoid escaping double quotes
// stylelint-disable string-quotes

// Generate a selector for a section by name.
// Optional $comparator arg affects the selector comparator (default is "=")
@function section-name($name, $comparator: "=") {
  @return '[data-section-name#{$comparator}"#{$name}"]';
}

// Generate a selector for a section by ID.
@function section-id($id, $comparator: "=") {
  @return '[data-section-id#{$comparator}"#{$id}"]';
}

// stylelint-enable string-quotes

// Adjust the flex-basis of examples to fit X per row.
// `.pt-fill` modifiers will always occupy an entire row.
// (Default styles give flex-basis of 100% to each example.)
@mixin examples-per-row($amount) {
  .kss-example {
    flex-basis: floor(100% / $amount);
    padding-right: $pt-grid-size * 2;

    &[data-modifier=".pt-fill"] {
      flex-basis: 100%;
      padding-right: 0;
    }
  }
}

// Section-Specific Styles

#{section-id("components.forms.checkbox")},
#{section-id("components.forms.radio")},
#{section-id("components.forms.switch")} {
  .kss-example {
    flex-basis: 10%;
  }
}

#{section-id("icons.ui.non-standard")} {
  @include examples-per-row(4);
}

.pt-control-group-example {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  height: $pt-grid-size * 13;
}

#{section-name("Inline controls")} {
  // override "components.forms.checkbox" above for this one child
  @include examples-per-row(1);
}

#{section-name("Vertical Control Groups")} {
  .pt-control-group {
    width: $pt-grid-size * 25;
  }
}

#{section-name("Labels")},
#{section-id("components.tag.css")},
#{section-id("components.menu.css")} {
  @include examples-per-row(2);
}

#{section-name("Cards")} > .kss-example-wrapper,
#{section-name("Text inputs")},
#{section-id("components.forms.input-group.css")},
#{section-id("components.button.css")} > .kss-example-wrapper,
#{section-name("Minimal buttons")} > .kss-example-wrapper,
#{section-name("Text areas")},
#{section-name("Selects")},
#{section-id("components.progress.bar.css")},
#{section-id("components.progress.spinner.css")} {
  @include examples-per-row(3);
}

#{section-name("Labeled static dropdown")} {
  .kss-example-wrapper {
    justify-content: initial;
  }

  .kss-example {
    flex-basis: $pt-grid-size * 25;
    margin-right: $options-margin;
  }
}

#{section-name("Alerts")} {
  .pt-button + .pt-button {
    margin-left: $pt-grid-size;
  }
}

#{section-name("Buttons")} {
  // put more space between buttons in all button sections
  .pt-button + .pt-button:not(.pt-fill) {
    margin-left: $pt-grid-size;
  }

  .pt-button.pt-fill + .pt-button.pt-fill {
    margin-top: $pt-grid-size;
  }
}

#{section-name("Collapse")} {
  .docs-react-example > div {
    height: $pt-grid-size * 18;
  }
}

#{section-name("Context menus")} {
  .kss-example-wrapper {
    margin-bottom: $options-margin;
    border-radius: $pt-border-radius;
    background: $light-gray3;

    .pt-dark & {
      background: $dark-gray5;
    }
  }

  .docs-react-options {
    text-align: center;

    > p {
      width: 100%;
    }
  }
}

#{section-name("Text input groups")} {
  .pt-input-group {
    margin-bottom: $pt-grid-size;
  }
}

#{section-id("components.forms.input-group.js")} {
  // target the two children div examples
  .docs-react-example > div > div {
    display: inline-block;
    margin-right: $options-margin;
    width: $pt-grid-size * 25;
  }
}

#{section-name("Color aliases")} {
  .pt-table {
    margin-top: $content-padding;

    th {
      padding-top: 0;
    }

    th:first-child,
    td:first-child {
      padding-right: 0;
      padding-left: 0;
    }
  }
}

#{section-id("components.hotkeys")} {
  .piano-example {
    opacity: 0.5;
  }

  .piano-example:focus {
    opacity: 1;
  }

  .piano-example > :first-child {
    margin-bottom: $pt-grid-size * 2;
  }

  .piano-key {
    display: inline-block;
    position: relative;
    z-index: 1;
  }

  .piano-key > div {
    margin-right: $pt-grid-size/2;
    border-bottom-left-radius: 5px;
    border-bottom-right-radius: 5px;
    background-color: $white;
    width: $pt-grid-size * 8;
    height: $pt-grid-size * 24;
    color: $black;
  }

  .piano-key-sharp {
    z-index: 2;
    width: 0;
    overflow: visible;
    vertical-align: top;
  }

  .piano-key-sharp > div {
    position: absolute;
    top: 0;
    left: $pt-grid-size * -4;
    background-color: $black;
    height: $pt-grid-size * 16;
    color: $white;
  }

  .piano-key-pressed > div {
    background-color: $pt-intent-primary;
    color: $white;
  }

  .piano-key-text {
    position: absolute;
    right: 0;
    bottom: 5px;
    left: 0;
    text-align: center;
  }

  .piano-key-note {
    opacity: 0.5;
  }

  .hotkey-tester-example .pt-key-combo {
    display: inline-block;
  }

  .kss-example {
    height: auto;
  }
}

#{section-id("components.table-js")} {
  .kss-example {
    height: $pt-grid-size * 30;
  }
}

// static markup examples for js components
#{section-id("components.dialog.css")} {
  .kss-example {
    height: $pt-grid-size * 27;
  }

  .pt-dialog {
    top: $content-padding;
    transform: translateX(50%);
  }
}

.docs-overlay-example-transition {
  $overlay-example-width: $pt-grid-size * 40;

  top: $overlay-example-width / 2;
  left: calc(50% - #{$overlay-example-width / 2});
  z-index: $pt-z-index-overlay + 1;
  width: $overlay-example-width;
}

#{section-name("Non-ideal State")} {
  .kss-example-wrapper {
    padding: $options-margin 0;
  }
}

#{section-name("Spinners")} {
  .docs-react-example > svg {
    width: $pt-grid-size * 10;
    height: $pt-grid-size * 10;
  }
}

#{section-name("Toasts")} {
  .pt-button + .pt-button {
    margin-left: $pt-grid-size;
    vertical-align: top;
  }
}

#{section-name("Popovers")} {
  .pt-label {
    width: $pt-grid-size * 21;
  }
}

#{section-id("components.menu.css")},
#{section-id("components.menu.css.header")},
#{section-id("components.menu.css.submenu")} {
  .kss-example-wrapper {
    justify-content: initial;
  }

  .kss-example {
    flex-basis: $pt-grid-size * 15;
  }
}

#{section-id("components.menu.css")} {
  .kss-example {
    margin-right: $pt-grid-size * 8;
    padding-right: 0;

    &:last-child {
      margin-right: 0;
    }
  }
}

#{section-name("Trees")} {
  .pt-tree {
    background-color: $white;
    width: $pt-grid-size * 35;

    .pt-dark & {
      background-color: $dark-gray4;
    }
  }
}

@function components-per-row($amount, $margin) {
  @return ($content-width - $margin * ($amount - 1)) / $amount;
}

$component-margin: $pt-grid-size * 4;

.docs-components-list {
  display: flex;
  flex-wrap: wrap;

  .pt-container {
    position: relative;
    margin-right: $component-margin;
    margin-bottom: $component-margin;
    width: components-per-row(4, $component-margin);
    text-decoration: none;

    &:nth-child(4n) {
      margin-right: 0;
    }

    &:hover strong {
      text-decoration: underline;
    }

    p:last-child {
      margin-bottom: 0;
    }
  }

  strong {
    display: block;
    margin-bottom: $pt-grid-size;
    font-size: $pt-font-size-large;
  }

  .pt-tag {
    margin-top: $pt-grid-size;

    &.pt-intent-success { float: right; }
  }
}
